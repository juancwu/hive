CREATE TABLE IF NOT EXISTS project_parts  (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    project_id UUID NOT NULL,
    part_id UUID NOT NULL,
    quantity_used INTEGER NOT NULL DEFAULT 0,
    CONSTRAINT project_parts_pk PRIMARY KEY (id),
    CONSTRAINT project_parts_project_id_fk FOREIGN KEY (project_id) REFERENCES projects (id) ON DELETE CASCADE,
    CONSTRAINT project_parts_part_id_fk FOREIGN KEY (part_id) REFERENCES parts (id) ON DELETE CASCADE,
    UNIQUE (project_id, part_id)
);

ALTER TABLE project_parts ENABLE ROW LEVEL SECURITY;

CREATE POLICY enable_project_parts_select_authenticated
ON project_parts AS PERMISSIVE FOR SELECT
TO authenticated
USING (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_parts.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM parts
        WHERE parts.id = project_parts.part_id
        AND parts.user_id = auth.uid()
    )
);

CREATE POLICY enable_project_parts_insert_authenticated
ON project_parts AS PERMISSIVE FOR INSERT
TO authenticated
WITH CHECK (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_parts.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM parts
        WHERE parts.id = project_parts.part_id
        AND parts.user_id = auth.uid()
    )
);

CREATE POLICY enable_project_parts_update_authenticated
ON project_parts AS PERMISSIVE FOR UPDATE
TO authenticated
USING (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_parts.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM parts
        WHERE parts.id = project_parts.part_id
        AND parts.user_id = auth.uid()
    )
)
WITH CHECK (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_parts.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM parts
        WHERE parts.id = project_parts.part_id
        AND parts.user_id = auth.uid()
    )
);


CREATE POLICY enable_project_parts_delete_authenticated
ON project_parts AS PERMISSIVE FOR DELETE
TO authenticated
USING (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_parts.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM parts
        WHERE parts.id = project_parts.part_id
        AND parts.user_id = auth.uid()
    )
);