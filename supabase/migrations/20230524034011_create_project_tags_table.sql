CREATE TABLE IF NOT EXISTS project_tags  (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    project_id UUID NOT NULL,
    tag_id UUID NOT NULL,
    CONSTRAINT project_tags_pk PRIMARY KEY (id),
    CONSTRAINT project_tags_project_id_fk FOREIGN KEY (project_id) REFERENCES projects (id) ON DELETE CASCADE,
    CONSTRAINT project_tags_tag_id_fk FOREIGN KEY (tag_id) REFERENCES tags (id) ON DELETE CASCADE,
    UNIQUE (project_id, tag_id)
);

ALTER TABLE project_tags ENABLE ROW LEVEL SECURITY;

CREATE POLICY enable_project_tags_select_authenticated
ON project_tags AS PERMISSIVE FOR SELECT
TO authenticated
USING (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_tags.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM tags
        WHERE tags.id = project_tags.tag_id
        AND tags.user_id = auth.uid()
    )
);

CREATE POLICY enable_project_tags_insert_authenticated
ON project_tags AS PERMISSIVE FOR INSERT
TO authenticated
WITH CHECK (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_tags.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM tags
        WHERE tags.id = project_tags.tag_id
        AND tags.user_id = auth.uid()
    )
);

CREATE POLICY enable_project_tags_update_authenticated
ON project_tags AS PERMISSIVE FOR UPDATE
TO authenticated
USING (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_tags.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM tags
        WHERE tags.id = project_tags.tag_id
        AND tags.user_id = auth.uid()
    )
)
WITH CHECK (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_tags.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM tags
        WHERE tags.id = project_tags.tag_id
        AND tags.user_id = auth.uid()
    )
);

CREATE POLICY enable_project_tags_delete_authenticated
ON project_tags AS PERMISSIVE FOR DELETE
TO authenticated
USING (
    EXISTS (
        SELECT 1
        FROM projects
        WHERE projects.id = project_tags.project_id
        AND projects.user_id = auth.uid()
    )
    AND
    EXISTS (
        SELECT 1
        FROM tags
        WHERE tags.id = project_tags.tag_id
        AND tags.user_id = auth.uid()
    )
);